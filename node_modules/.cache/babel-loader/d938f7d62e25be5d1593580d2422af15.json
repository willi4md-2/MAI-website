{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\n\nvar _Input = _interopRequireDefault(require(\"@material-ui/core/Input\"));\n\nvar _Paper = _interopRequireDefault(require(\"@material-ui/core/Paper\"));\n\nvar _Clear = _interopRequireDefault(require(\"@material-ui/icons/Clear\"));\n\nvar _Search = _interopRequireDefault(require(\"@material-ui/icons/Search\"));\n\nvar _withStyles = _interopRequireDefault(require(\"@material-ui/core/styles/withStyles\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      height: theme.spacing(6),\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    iconButton: {\n      color: theme.palette.action.active,\n      transform: \"scale(1, 1)\",\n      transition: theme.transitions.create([\"transform\", \"color\"], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeInOut\n      })\n    },\n    iconButtonHidden: {\n      transform: \"scale(0, 0)\",\n      \"& > $icon\": {\n        opacity: 0\n      }\n    },\n    searchIconButton: {\n      marginRight: theme.spacing(-6)\n    },\n    icon: {\n      transition: theme.transitions.create([\"opacity\"], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeInOut\n      })\n    },\n    input: {\n      width: \"100%\"\n    },\n    searchContainer: {\n      margin: \"auto 16px\",\n      width: \"calc(100% - \".concat(theme.spacing(6 + 4), \"px)\") // 6 button + 4 margin\n\n    }\n  };\n};\n/**\n * Material design search bar\n * @see [Search patterns](https://material.io/archive/guidelines/patterns/search.html)\n */\n\n\nvar SearchBar = /*#__PURE__*/_react[\"default\"].forwardRef(function (_ref, ref) {\n  var cancelOnEscape = _ref.cancelOnEscape,\n      className = _ref.className,\n      classes = _ref.classes,\n      closeIcon = _ref.closeIcon,\n      disabled = _ref.disabled,\n      onCancelSearch = _ref.onCancelSearch,\n      onRequestSearch = _ref.onRequestSearch,\n      searchIcon = _ref.searchIcon,\n      style = _ref.style,\n      inputProps = _objectWithoutProperties(_ref, [\"cancelOnEscape\", \"className\", \"classes\", \"closeIcon\", \"disabled\", \"onCancelSearch\", \"onRequestSearch\", \"searchIcon\", \"style\"]);\n\n  var inputRef = _react[\"default\"].useRef();\n\n  var _React$useState = _react[\"default\"].useState(inputProps.value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  _react[\"default\"].useEffect(function () {\n    setValue(inputProps.value);\n  }, [inputProps.value]);\n\n  var handleFocus = _react[\"default\"].useCallback(function (e) {\n    if (inputProps.onFocus) {\n      inputProps.onFocus(e);\n    }\n  }, [inputProps.onFocus]);\n\n  var handleBlur = _react[\"default\"].useCallback(function (e) {\n    setValue(function (v) {\n      return v.trim();\n    });\n\n    if (inputProps.onBlur) {\n      inputProps.onBlur(e);\n    }\n  }, [inputProps.onBlur]);\n\n  var handleInput = _react[\"default\"].useCallback(function (e) {\n    setValue(e.target.value);\n\n    if (inputProps.onChange) {\n      inputProps.onChange(e.target.value);\n    }\n  }, [inputProps.onChange]);\n\n  var handleCancel = _react[\"default\"].useCallback(function () {\n    setValue(\"\");\n\n    if (onCancelSearch) {\n      onCancelSearch();\n    }\n  }, [onCancelSearch]);\n\n  var handleRequestSearch = _react[\"default\"].useCallback(function () {\n    if (onRequestSearch) {\n      onRequestSearch(value);\n    }\n  }, [onRequestSearch, value]);\n\n  var handleKeyUp = _react[\"default\"].useCallback(function (e) {\n    if (e.charCode === 13 || e.key === \"Enter\") {\n      handleRequestSearch();\n    } else if (cancelOnEscape && (e.charCode === 27 || e.key === \"Escape\")) {\n      handleCancel();\n    }\n\n    if (inputProps.onKeyUp) {\n      inputProps.onKeyUp(e);\n    }\n  }, [handleRequestSearch, cancelOnEscape, handleCancel, inputProps.onKeyUp]);\n\n  _react[\"default\"].useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  });\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Paper[\"default\"], {\n    className: (0, _classnames[\"default\"])(classes.root, className),\n    style: style\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: classes.searchContainer\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Input[\"default\"], _extends({}, inputProps, {\n    inputRef: inputRef,\n    onBlur: handleBlur,\n    value: value,\n    onChange: handleInput,\n    onKeyUp: handleKeyUp,\n    onFocus: handleFocus,\n    fullWidth: true,\n    className: classes.input,\n    disableUnderline: true,\n    disabled: disabled\n  }))), /*#__PURE__*/_react[\"default\"].createElement(_IconButton[\"default\"], {\n    onClick: handleRequestSearch,\n    className: (0, _classnames[\"default\"])(classes.iconButton, classes.searchIconButton, _defineProperty({}, classes.iconButtonHidden, value !== \"\")),\n    disabled: disabled\n  }, /*#__PURE__*/_react[\"default\"].cloneElement(searchIcon, {\n    classes: {\n      root: classes.icon\n    }\n  })), /*#__PURE__*/_react[\"default\"].createElement(_IconButton[\"default\"], {\n    onClick: handleCancel,\n    className: (0, _classnames[\"default\"])(classes.iconButton, _defineProperty({}, classes.iconButtonHidden, value === \"\")),\n    disabled: disabled\n  }, /*#__PURE__*/_react[\"default\"].cloneElement(closeIcon, {\n    classes: {\n      root: classes.icon\n    }\n  })));\n});\n\nSearchBar.defaultProps = {\n  className: \"\",\n  closeIcon: /*#__PURE__*/_react[\"default\"].createElement(_Clear[\"default\"], null),\n  disabled: false,\n  placeholder: \"Search\",\n  searchIcon: /*#__PURE__*/_react[\"default\"].createElement(_Search[\"default\"], null),\n  style: null,\n  value: \"\"\n};\nSearchBar.propTypes = {\n  /** Whether to clear search on escape */\n  cancelOnEscape: _propTypes[\"default\"].bool,\n\n  /** Override or extend the styles applied to the component. */\n  classes: _propTypes[\"default\"].object.isRequired,\n\n  /** Custom top-level class */\n  className: _propTypes[\"default\"].string,\n\n  /** Override the close icon. */\n  closeIcon: _propTypes[\"default\"].node,\n\n  /** Disables text field. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Fired when the search is cancelled. */\n  onCancelSearch: _propTypes[\"default\"].func,\n\n  /** Fired when the text value changes. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** Fired when the search icon is clicked. */\n  onRequestSearch: _propTypes[\"default\"].func,\n\n  /** Sets placeholder text for the embedded text field. */\n  placeholder: _propTypes[\"default\"].string,\n\n  /** Override the search icon. */\n  searchIcon: _propTypes[\"default\"].node,\n\n  /** Override the inline-styles of the root element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The value of the text field. */\n  value: _propTypes[\"default\"].string\n};\n\nvar _default = (0, _withStyles[\"default\"])(styles)(SearchBar);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}